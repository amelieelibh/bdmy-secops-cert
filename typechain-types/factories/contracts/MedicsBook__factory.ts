/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  MedicsBook,
  MedicsBookInterface,
} from "../../contracts/MedicsBook";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "NewMedic",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_url",
        type: "string",
      },
    ],
    name: "addMedic",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_medic",
        type: "address",
      },
    ],
    name: "existMedic",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "page",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "size",
        type: "uint256",
      },
    ],
    name: "getDoctors",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDoctorsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_medic",
        type: "address",
      },
    ],
    name: "getMedic",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "url",
            type: "string",
          },
        ],
        internalType: "struct Medic",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "medicsList",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_url",
        type: "string",
      },
    ],
    name: "updateMedic",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610c26806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638129fc1c116100665780638129fc1c14610118578063885fe869146101225780639539294114610142578063b39c286114610155578063e3b99f801461016857600080fd5b806331357af21461009857806347fff12f146100ae5780635c975abb146100ed57806379b28f4f146100f8575b600080fd5b6066546040519081526020015b60405180910390f35b6100dd6100bc3660046108d8565b6001600160a01b039081166000818152606560205260409020549091161490565b60405190151581526020016100a5565b60335460ff166100dd565b61010b6101063660046108d8565b610193565b6040516100a59190610955565b61012061031e565b005b6101356101303660046109a9565b61042c565b6040516100a591906109cb565b610120610150366004610abb565b610692565b610120610163366004610abb565b610754565b61017b610176366004610b1f565b610815565b6040516001600160a01b0390911681526020016100a5565b6101c0604051806060016040528060006001600160a01b0316815260200160608152602001606081525090565b6001600160a01b03808316600090815260656020908152604091829020825160608101909352805490931682526001830180549293929184019161020390610b38565b80601f016020809104026020016040519081016040528092919081815260200182805461022f90610b38565b801561027c5780601f106102515761010080835404028352916020019161027c565b820191906000526020600020905b81548152906001019060200180831161025f57829003601f168201915b5050505050815260200160028201805461029590610b38565b80601f01602080910402602001604051908101604052809291908181526020018280546102c190610b38565b801561030e5780601f106102e35761010080835404028352916020019161030e565b820191906000526020600020905b8154815290600101906020018083116102f157829003601f168201915b5050505050815250509050919050565b600054610100900460ff161580801561033e5750600054600160ff909116105b806103585750303b158015610358575060005460ff166001145b6103c05760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff1916600117905580156103e3576000805461ff0019166101001790555b8015610429576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b60606000831161047e5760405162461bcd60e51b815260206004820152601b60248201527f50616765206d7573742062652067726561746572207468616e2030000000000060448201526064016103b7565b600082116104ce5760405162461bcd60e51b815260206004820152601b60248201527f53697a65206d7573742062652067726561746572207468616e2030000000000060448201526064016103b7565b60006104d960665490565b90506000836104e9600187610b89565b6104f39190610ba0565b90508181106105385760405162461bcd60e51b815260206004820152601160248201527050616765206f7574206f662072616e676560781b60448201526064016103b7565b60006105448587610ba0565b905060008382106105555783610557565b815b905080831061059c5760405162461bcd60e51b815260206004820152601160248201527050616765206f7574206f662072616e676560781b60448201526064016103b7565b60006105a88483610b89565b905060008167ffffffffffffffff8111156105c5576105c5610a18565b6040519080825280602002602001820160405280156105ee578160200160208202803683370190505b5090508483141561060657955061068c945050505050565b6000855b84811015610681576066818154811061062557610625610bbf565b6000918252602090912001546001600160a01b0316838361064581610bd5565b94508151811061065757610657610bbf565b6001600160a01b03909216602092830291909101909101528061067981610bd5565b91505061060a565b509096505050505050505b92915050565b336000818152606560205260409020546001600160a01b0316146107025760405162461bcd60e51b815260206004820152602160248201527f4f6e6c79206d656469632063616e2063616c6c20746869732066756e6374696f6044820152603760f91b60648201526084016103b7565b33600090815260656020908152604090912083516107289260019092019185019061083f565b50336000908152606560209081526040909120825161074f9260029092019184019061083f565b505050565b6040805160608101825233808252602080830186815283850186905260009283526065825293909120825181546001600160a01b0319166001600160a01b03909116178155925180519293926107b0926001850192019061083f565b50604082015180516107cc91600284019160209091019061083f565b5050606680546001810182556000919091527f46501879b8ca8525e8c2fd519e2fbfcfa2ebea26501294aa02cbfcfb12e943540180546001600160a01b03191633179055505050565b6066818154811061082557600080fd5b6000918252602090912001546001600160a01b0316905081565b82805461084b90610b38565b90600052602060002090601f01602090048101928261086d57600085556108b3565b82601f1061088657805160ff19168380011785556108b3565b828001600101855582156108b3579182015b828111156108b3578251825591602001919060010190610898565b506108bf9291506108c3565b5090565b5b808211156108bf57600081556001016108c4565b6000602082840312156108ea57600080fd5b81356001600160a01b038116811461090157600080fd5b9392505050565b6000815180845260005b8181101561092e57602081850181015186830182015201610912565b81811115610940576000602083870101525b50601f01601f19169290920160200192915050565b602080825282516001600160a01b031682820152820151606060408301526000906109836080840182610908565b90506040840151601f198483030160608501526109a08282610908565b95945050505050565b600080604083850312156109bc57600080fd5b50508035926020909101359150565b6020808252825182820181905260009190848201906040850190845b81811015610a0c5783516001600160a01b0316835292840192918401916001016109e7565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610a3f57600080fd5b813567ffffffffffffffff80821115610a5a57610a5a610a18565b604051601f8301601f19908116603f01168101908282118183101715610a8257610a82610a18565b81604052838152866020858801011115610a9b57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215610ace57600080fd5b823567ffffffffffffffff80821115610ae657600080fd5b610af286838701610a2e565b93506020850135915080821115610b0857600080fd5b50610b1585828601610a2e565b9150509250929050565b600060208284031215610b3157600080fd5b5035919050565b600181811c90821680610b4c57607f821691505b60208210811415610b6d57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082821015610b9b57610b9b610b73565b500390565b6000816000190483118215151615610bba57610bba610b73565b500290565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610be957610be9610b73565b506001019056fea26469706673582212208432d7e87afe613f642b70b14df0c52e7f1a22979f121ddbed0709f07d27004d64736f6c63430008090033";

type MedicsBookConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MedicsBookConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MedicsBook__factory extends ContractFactory {
  constructor(...args: MedicsBookConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MedicsBook> {
    return super.deploy(overrides || {}) as Promise<MedicsBook>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MedicsBook {
    return super.attach(address) as MedicsBook;
  }
  override connect(signer: Signer): MedicsBook__factory {
    return super.connect(signer) as MedicsBook__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MedicsBookInterface {
    return new utils.Interface(_abi) as MedicsBookInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MedicsBook {
    return new Contract(address, _abi, signerOrProvider) as MedicsBook;
  }
}
