/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IMedicsBook,
  IMedicsBookInterface,
} from "../../../contracts/MedicineSupply.sol/IMedicsBook";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_medic",
        type: "address",
      },
    ],
    name: "existMedic",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_medic",
        type: "address",
      },
    ],
    name: "getMedic",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "url",
            type: "string",
          },
        ],
        internalType: "struct Medic",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class IMedicsBook__factory {
  static readonly abi = _abi;
  static createInterface(): IMedicsBookInterface {
    return new utils.Interface(_abi) as IMedicsBookInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IMedicsBook {
    return new Contract(address, _abi, signerOrProvider) as IMedicsBook;
  }
}
